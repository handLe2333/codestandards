命名规范

↳2
目录命名
↳3
有复数结构时，要采用复数命名法。
↳4
例: scripts, styles, images, data_models

↳2
文件命名
↳3
采用小写字母，项目名加功能名，使用下划线分割。
↳4
例: xjk_main.js, xjk_core.css, result_fail.html

↳2
class命名规范
↳3
采用小写字母, 不得以样式信息进行命名, 单词间以 - 分隔。
↳4
例: submit-btn, show-head

↳2
嵌入资源
↳3
在引用样式表文件、脚本文件、图片以及其他媒体文件时忽略协议部分（http:，https:）。
↳4
&lt;!-- 推荐 -->;
<script src="//ms.jr.jd.com/gw/generic/jj/h5/m/getOpenXjkSupportedBankList">&lt;/script>

↳1
HTML
↳2
HTML5 doctype
↳3
在页面开头使用这个简单地doctype来启用标准模式，使其在每个浏览器中尽可能一致的展现, doctype大写。
↳4
<!DOCTYPE html>
<html>
...
</html>

↳2
lang
↳3
在 html 标签上设置正确的 lang 属性。
更多<a href='http://msdn.microsoft.com/en-us/library/ms533052(v=vs.85).aspx'>Language Codes</a>。
↳4
&lt;html lang="zh-CN"&gt;

↳2
viewport
↳3
<a href='https://developer.apple.com/library/mac/documentation/AppleApplications/Reference/SafariWebContent/UsingtheViewport/UsingtheViewport.html#//apple_ref/doc/uid/TP40006509-SW26'>Safari Web Content Guide的介绍</a>。
↳4
<meta name="viewport" content="width=device-width, initial-scale=1">;

↳2
HTML风格
↳3
<ul>
<li>列表中的条目必须总是放置于&lt;ul>、&lt;ol>或&lt;dl> 中。</li>
<li>给每个表单里的字段加上 &lt;label> 标签。</li>
<li>在容易混淆的 &lt;/div> 标签旁边加上一段html注释</li>
</ul>
↳4

↳2
属性顺序
↳3
属性应该按照特定的顺序出现以保证易读性;
<ul>
<li><code>class</code></li>
<li><code>id</code></li>
<li><code>name</code></li>
<li><code>data-*</code></li>
<li><code>src, for, type, href, value , max-length, max, min, pattern</code></li>
<li><code>placeholder, title, alt</code></li>
<li><code>aria-*, role</code></li>
<li><code>required, readonly, disabled</code></li>
</ul>
↳4
<a class="..." id="..." data-type="..." href="#"></a>

<input class="..." type="text">

<img src="..." alt="...">

↳2
class选择器
↳3
元素名与ID或者class混合使用会影响页面性能。<br><br>
<a href="http://www.stevesouders.com/blog/2009/06/18/simplifying-css-selectors/">详细说明</a>
↳4
/* 不推荐 */

ul#example {}
div.error {}

/* 推荐 */

#example {}
.error {}

↳2
引号
↳3
HTML属性统一使用双引号。
↳4
<a class="maia-button maia-button-secondary"></a>

↳2
class选择器
↳3
避免元素名与ID或者class混合使用的情况。
会对影响渲染性能产生影响。<br><br>
<a href="http://www.stevesouders.com/blog/2009/06/18/simplifying-css-selectors/">详细说明</a>
↳4
/* 不推荐 */

ul#example {}
div.error {}

/* 推荐 */

#example {}
.error {}

↳2
boolean属性
↳3
boolean属性指不需要声明取值的属性，XHTML需要每个属性声明取值，但是HTML5并不需要；<br>
boolean属性的存在表示取值为true，不存在则表示取值为false。<br>
<a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#boolean-attributes">WhatWG section on boolean attributes</a>
↳4
<input type="text" disabled>

<input type="checkbox" value="1" checked>

<select>
    <option value="1" selected>1</option>
</select>

↳1CSS,SASS
↳2
空格
↳3
<p>以下几种情况不需要空格：</p>
<ul>
    <li>属性名后</li>
    <li>多个规则的分隔符','前</li>
    <li><code>!important</code> '!'后</li>
    <li>属性值中'('后和')'前</li>
    <li>行末不要有多余的空格</li>
</ul>
<br>
<p>以下几种情况需要空格：</p>
<ul>
    <li>属性值前</li>
    <li>选择器'&gt;', '+', '~'前后</li>
    <li>'{'前</li>
    <li><code>!important</code> '!'前</li>
    <li><code>@else</code> 前后</li>
    <li>属性值中的','后</li>
    <li>注释'/*'后和'*/'前</li>
</ul>
↳4
.element {
    color: red !important;
    background-color: rgba(0, 0, 0, .5);
}

.element,
.dialog {

}

.element > .dialog{
    ...
}

.element {
    ...
}

@if {
    ...
} @else {
    ...
}

↳2
空行
↳3
<p>以下几种情况需要空行：</p>
<ul>
    <li>文件最后保留一个空行</li>
    <li>'}'后最好跟一个空行，包括scss中嵌套的规则</li>
    <li>属性之间需要适当的空行</li>
</ul>
↳4
.element {
    ...
}

.dialog {
    color: red;

    &:after {
        ...
    }
}

↳2
换行
↳3
<p>以下几种情况需要换行：</p>
<ul>
    <li>'{'后和'}'前</li>
    <li>每个属性独占一行</li>
    <li>多个规则的分隔符','后</li>
</ul>
↳4
.element {
    color: red;
    background-color: black;
}

.element,
.dialog {
    ...
}

↳2
注释
↳3
注释统一用'/* */'；<br><br>
缩进与下一行代码保持一致；<br><br>
可位于一个代码行的末尾，与代码间隔一个空格。
↳4
/* Header */

#adw-header {}

/*
 * Modal header
 */
.modal-header {
    ...
}

.modal-header {
    /* 50px */
    width: 50px;

    color: red; /* color red */
}

↳2
命名
↳3
<ul>
    <li>类名使用小写字母，以中划线分隔</li>
    <li>id采用驼峰式命名</li>
    <li>sass中的变量、函数、混合、placeholder采用驼峰式命名</li>
</ul>
↳4
/* class */
.element-content {
    ...
}

/* id */
#myDialog {
    ...
}

/* 变量 */
$colorBlack: #000;

/* 函数 */
@function pxToRem($px) {
    ...
}

/* 混合 */
@mixin centerBlock {
    ...
}

/* placeholder */
%myDialog {
    ...
}

↳2
属性声明顺序
↳3
建议书写顺序可按字母表排列顺序
↳4
.sth{
    background: fuchsia;
    border: 1px solid;
    -moz-border-radius: 4px;
    -webkit-border-radius: 4px;
    border-radius: 4px;
    color: black;
    text-align: center;
    text-indent: 2em;
}

↳2
属性简写
↳3
尽量使用缩写，可增加对代码的理解。
↳4
.sth{
    border-top: 0;
    font: 100%/1.6 palatino, georgia, serif;
    padding: 0 1em 2em;
}

↳2
避免Hacks
↳3
避免在css中使用Hacks<br><br>
Hack会增加代码阅读难度，和后期维护成本。
↳4

↳2
其他
↳3
不允许有空的规则；<br><br>
元素选择器用小写字母；<br><br>
去掉小数点前面的0；<br><br>
去掉数字中不必要的小数点和末尾的0；<br><br>
属性值'0'后面不要加单位；<br><br>
同个属性不同前缀的写法需要在垂直方向保持对齐；<br><br>
无前缀的标准属性应该写在有前缀的属性后面；<br><br>
不要在同个规则里出现重复的属性，如果重复的属性是连续的则没关系；<br><br>
不要在一个文件里出现两个相同的规则；<br><br>
用 border: 0; 代替 border: none;；<br><br>
尽量少用'*'选择器。
↳4
